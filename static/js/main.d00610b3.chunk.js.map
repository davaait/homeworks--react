{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","imageBlock","src","avatar","alt","messageWrapper","name","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","onKeyPress","e","key","button","disabled","span","showError","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","placeholder","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d00610b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3VBdT\",\"imageBlock\":\"Message_imageBlock__1O3Hp\",\"messageWrapper\":\"Message_messageWrapper__2v3hF\",\"name\":\"Message_name__3YqX_\",\"time\":\"Message_time__15Z_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showError\":\"Greeting_showError__1E4fr\",\"button\":\"Greeting_button__33oxi\",\"error\":\"Greeting_error__3Coc1\",\"span\":\"Greeting_span__HXTVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__ByHdD\",\"errorInput\":\"SuperInputText_errorInput__3Xp3U\",\"error\":\"SuperInputText_error__kJOFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__sKlIP\",\"red\":\"SuperButton_red__1rYEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__XU3S3\",\"column\":\"HW4_column__2LPNx\",\"testSpanError\":\"HW4_testSpanError__2MxcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__29Etg\",\"spanClassName\":\"SuperCheckbox_spanClassName__1WmIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__xcGVP\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.imageBlock}>\r\n                <img src={props.avatar} alt=\"ava\"/>\r\n            </div>\r\n            <div className={s.messageWrapper}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Message } from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: \"Aragorn\",\r\n    message: \"Hi! How is your kingdom?\",\r\n    time: \"22:00\",\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nexport function Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Affair} from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\nexport type AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nexport function Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Affairs} from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = \"all\" | AffairPriorityType\r\n\r\n// constants\r\nlet defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n    {_id: 6, name: 'instagram', priority: 'low'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    switch (filter) {\r\n        case \"high\":\r\n            return affairs.filter(a => a.priority === \"high\");\r\n        case \"middle\":\r\n            return affairs.filter(a => a.priority === \"middle\");\r\n        case \"low\":\r\n            return affairs.filter(a => a.priority === \"low\");\r\n        default:\r\n            return affairs;\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2;","import React from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: any // need to fix any\r\n    addUser: any // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                    addUser();\r\n                }\r\n            }} className={inputClass}/>\r\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\r\n            <span className={s.span}>{totalUsers}</span>\r\n            <div><span className={s.showError}>{error}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.currentTarget.value.length > 0) {\r\n            setName(e.currentTarget.value)\r\n            setError('')\r\n        } else {\r\n            setError('Wrong data')\r\n            setName('')\r\n        } // need to fix\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name);\r\n        alert(`Hello, ${name}!`) // need to fix\r\n        setName('')\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n};\r\n\r\nexport default GreetingContainer;","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {\r\n            _id: v1(),\r\n            name,\r\n        }]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                placeholder={\"Enter text...\"}\r\n                name={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}